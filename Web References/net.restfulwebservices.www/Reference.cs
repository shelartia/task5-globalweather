//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.17929
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.17929.
// 
#pragma warning disable 1591

namespace WorkWithWCF.net.restfulwebservices.www {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_IWeatherForecastService", Namespace="http://www.restfulwebservices.net/ServiceContracts/2008/01")]
    public partial class WeatherForecastService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetCitiesByCountryOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForecastByCityOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WeatherForecastService() {
            this.Url = global::WorkWithWCF.Properties.Settings.Default.WorkWithWCF_net_restfulwebservices_www_WeatherForecastService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetCitiesByCountryCompletedEventHandler GetCitiesByCountryCompleted;
        
        /// <remarks/>
        public event GetForecastByCityCompletedEventHandler GetForecastByCityCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetCitiesByCountry", RequestNamespace="http://www.restfulwebservices.net/ServiceContracts/2008/01", ResponseNamespace="http://www.restfulwebservices.net/ServiceContracts/2008/01", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [return: System.Xml.Serialization.XmlArrayItemAttribute(Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
        public string[] GetCitiesByCountry([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Country) {
            object[] results = this.Invoke("GetCitiesByCountry", new object[] {
                        Country});
            return ((string[])(results[0]));
        }
        
        /// <remarks/>
        public void GetCitiesByCountryAsync(string Country) {
            this.GetCitiesByCountryAsync(Country, null);
        }
        
        /// <remarks/>
        public void GetCitiesByCountryAsync(string Country, object userState) {
            if ((this.GetCitiesByCountryOperationCompleted == null)) {
                this.GetCitiesByCountryOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetCitiesByCountryOperationCompleted);
            }
            this.InvokeAsync("GetCitiesByCountry", new object[] {
                        Country}, this.GetCitiesByCountryOperationCompleted, userState);
        }
        
        private void OnGetCitiesByCountryOperationCompleted(object arg) {
            if ((this.GetCitiesByCountryCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetCitiesByCountryCompleted(this, new GetCitiesByCountryCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("GetForecastByCity", RequestNamespace="http://www.restfulwebservices.net/ServiceContracts/2008/01", ResponseNamespace="http://www.restfulwebservices.net/ServiceContracts/2008/01", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public Weather GetForecastByCity([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string City, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Country) {
            object[] results = this.Invoke("GetForecastByCity", new object[] {
                        City,
                        Country});
            return ((Weather)(results[0]));
        }
        
        /// <remarks/>
        public void GetForecastByCityAsync(string City, string Country) {
            this.GetForecastByCityAsync(City, Country, null);
        }
        
        /// <remarks/>
        public void GetForecastByCityAsync(string City, string Country, object userState) {
            if ((this.GetForecastByCityOperationCompleted == null)) {
                this.GetForecastByCityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForecastByCityOperationCompleted);
            }
            this.InvokeAsync("GetForecastByCity", new object[] {
                        City,
                        Country}, this.GetForecastByCityOperationCompleted, userState);
        }
        
        private void OnGetForecastByCityOperationCompleted(object arg) {
            if ((this.GetForecastByCityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForecastByCityCompleted(this, new GetForecastByCityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.17929")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.restfulwebservices.net/DataContracts/2008/01")]
    public partial class Weather {
        
        private string locationField;
        
        private string timeField;
        
        private string windField;
        
        private string visibilityField;
        
        private string skyConditionsField;
        
        private string temperatureField;
        
        private string dewPointField;
        
        private string relativeHumidityField;
        
        private string pressureField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Location {
            get {
                return this.locationField;
            }
            set {
                this.locationField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Time {
            get {
                return this.timeField;
            }
            set {
                this.timeField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Wind {
            get {
                return this.windField;
            }
            set {
                this.windField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Visibility {
            get {
                return this.visibilityField;
            }
            set {
                this.visibilityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string SkyConditions {
            get {
                return this.skyConditionsField;
            }
            set {
                this.skyConditionsField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Temperature {
            get {
                return this.temperatureField;
            }
            set {
                this.temperatureField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string DewPoint {
            get {
                return this.dewPointField;
            }
            set {
                this.dewPointField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string RelativeHumidity {
            get {
                return this.relativeHumidityField;
            }
            set {
                this.relativeHumidityField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Pressure {
            get {
                return this.pressureField;
            }
            set {
                this.pressureField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetCitiesByCountryCompletedEventHandler(object sender, GetCitiesByCountryCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetCitiesByCountryCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetCitiesByCountryCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    public delegate void GetForecastByCityCompletedEventHandler(object sender, GetForecastByCityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.17929")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForecastByCityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForecastByCityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Weather Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Weather)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591